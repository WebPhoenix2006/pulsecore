openapi: 3.0.3
info:
  title: PulseCore Authentication API
  version: 1.0.0
  description: Authentication and user management endpoints for Phase 1 (MVP).
servers:
  - url: https://api.pulsecore.com/
    description: Production server
  - url: http://localhost:8000/api/
    description: Local development

paths:
  /auth/register:
    post:
      summary: Register a new user
      tags: [Authentication]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [email, password, full_name]
              properties:
                email:
                  type: string
                  format: email
                password:
                  type: string
                  format: password
                  minLength: 8
                full_name:
                  type: string
                username:
                  type: string
                first_name:
                  type: string
                last_name:
                  type: string
      responses:
        "201":
          description: User successfully registered
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  verification_token:
                    type: string
                    description: One-time token to be used for email verification
        "400":
          description: Validation error

  /auth/verify-email:
    post:
      summary: Verify a userâ€™s email with the token
      tags: [Authentication]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [token]
              properties:
                token:
                  type: string
                  description: One-time verification token
      responses:
        "200":
          description: Email verified successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  detail:
                    type: string
                  token:
                    type: string
                  refresh:
                    type: string
                  user:
                    $ref: "#/components/schemas/User"

  /auth/login:
    post:
      summary: Authenticate user and return JWT
      tags: [Authentication]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [email, password]
              properties:
                email:
                  type: string
                  format: email
                password:
                  type: string
                  format: password
      responses:
        "200":
          description: Login successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  access:
                    type: string
                  refresh:
                    type: string
                  tenant_id:
                    type: string
                  user:
                    $ref: "#/components/schemas/User"
        "401":
          description: Invalid credentials

  /auth/logout:
    post:
      summary: Invalidate the current JWT
      tags: [Authentication]
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [refresh]
              properties:
                refresh:
                  type: string
                  description: Refresh token to blacklist
      responses:
        "205":
          description: Logout successful
        "400":
          description: Invalid or expired refresh token

  /auth/reset-password-request:
    post:
      summary: Request a password reset email
      tags: [Authentication]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [email]
              properties:
                email:
                  type: string
                  format: email
      responses:
        "200":
          description: Password reset link sent

  /auth/reset-password-confirm:
    post:
      summary: Reset password using token from email
      tags: [Authentication]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [token, new_password]
              properties:
                token:
                  type: string
                new_password:
                  type: string
                  format: password
                  minLength: 8
      responses:
        "200":
          description: Password successfully reset

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    User:
      type: object
      properties:
        id:
          type: string
        email:
          type: string
        username:
          type: string
        first_name:
          type: string
        last_name:
          type: string
        is_active:
          type: boolean
        role:
          type: string
          enum: [Admin, Manager, Viewer]
        avatar:
          type: string
          nullable: true
        phone_number:
          type: string
          nullable: true
        date_joined:
          type: string
          format: date-time
